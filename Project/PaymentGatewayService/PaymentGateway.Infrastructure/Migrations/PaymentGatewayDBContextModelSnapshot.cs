// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentGatway.Infrastructure.Data;

namespace PaymentGateway.Infrastructure.Migrations
{
    [DbContext(typeof(PaymentGatewayDBContext))]
    partial class PaymentGatewayDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentGatway.Core.Models.Bank", b =>
                {
                    b.Property<Guid>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BankId");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            BankId = new Guid("5f2e3fd1-9b46-4b04-bca4-6f785674c172"),
                            BankName = "Barclays",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(5891), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(7006), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            BankId = new Guid("57da71b7-67ca-480b-87cf-004a6e482688"),
                            BankName = "American Express",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(8110), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(8140), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            BankId = new Guid("ffd1f0f2-8dd9-4d1e-94ba-1befe4e3f6b9"),
                            BankName = "Halifax",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(8159), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(8172), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            BankId = new Guid("4a096637-c9e6-4e49-b703-d516420e7726"),
                            BankName = "HSBC",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(8190), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 749, DateTimeKind.Unspecified).AddTicks(8204), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.BankCard", b =>
                {
                    b.Property<Guid>("BankCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CVV")
                        .HasColumnType("int");

                    b.Property<string>("CardHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ExpiryMonth")
                        .HasColumnType("int");

                    b.Property<int>("ExpiryYear")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BankCardId");

                    b.ToTable("BankCards");
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.Currency", b =>
                {
                    b.Property<Guid>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            CurrencyId = new Guid("3a7d34d8-3e66-40d7-a0e2-016ee64effc9"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(3376), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "GBP",
                            CurrencyDescription = "British Pound",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(4441), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("15cc6063-ebd1-4c0b-8ab6-6b6f84244538"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5492), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "USD",
                            CurrencyDescription = "United States Doller",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5521), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("9e7a8cfd-ebb4-44ff-abb6-f3caf390c927"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5542), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "TRY",
                            CurrencyDescription = "Turkish Lira",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5556), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("cab83ba1-2c84-4009-8e9f-ee611900c9c0"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5574), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "AED",
                            CurrencyDescription = "United Arab Emirates Dirham",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5588), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("fda8030d-42dc-455c-96a6-fdec0f2483b1"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5606), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "EUR",
                            CurrencyDescription = "Euro",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 750, DateTimeKind.Unspecified).AddTicks(5620), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.Merchant", b =>
                {
                    b.Property<Guid>("MerchantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MerchantId");

                    b.ToTable("Merchants");

                    b.HasData(
                        new
                        {
                            MerchantId = new Guid("40b972b9-3457-4262-be9a-c4f109a0a5a1"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 726, DateTimeKind.Unspecified).AddTicks(3514), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Makes Tech Product",
                            MerchantName = "Apple",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 746, DateTimeKind.Unspecified).AddTicks(3120), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            MerchantId = new Guid("9cf3ac43-9d21-4101-8828-1959d3de005f"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 746, DateTimeKind.Unspecified).AddTicks(4629), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Online Retaier and Distributer",
                            MerchantName = "Amazon",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 746, DateTimeKind.Unspecified).AddTicks(4660), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            MerchantId = new Guid("31b5b9d7-f23b-4cb2-8d4b-5da0e256216a"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 746, DateTimeKind.Unspecified).AddTicks(4682), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Groceries Retailer",
                            MerchantName = "Sainsburys",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 746, DateTimeKind.Unspecified).AddTicks(4697), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            MerchantId = new Guid("2828ded6-0eff-423f-bf12-648c1f55c838"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 746, DateTimeKind.Unspecified).AddTicks(4715), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Online food delivery service",
                            MerchantName = "Deliveroo",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 19, 23, 43, 42, 746, DateTimeKind.Unspecified).AddTicks(4730), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BankCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MerchantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
