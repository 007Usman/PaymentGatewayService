// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentGatway.Infrastructure.Data;

namespace PaymentGatway.Infrastructure.Migrations
{
    [DbContext(typeof(PaymentGatewayDBContext))]
    partial class PaymentGatewayDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentGatway.Core.Models.Bank", b =>
                {
                    b.Property<Guid>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BankId");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            BankId = new Guid("f9d49fd0-77d1-4a31-af08-3c1b28f6d850"),
                            BankName = "Barclays",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(7070), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(8090), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            BankId = new Guid("e31095f2-faa8-4ea7-ae3a-16b14a62190c"),
                            BankName = "American Express",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(8971), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(8993), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            BankId = new Guid("7b4d71ed-785a-4136-a08d-67d9fc038912"),
                            BankName = "Halifax",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(9002), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(9009), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            BankId = new Guid("f2bbbf01-1574-4e03-ab77-ccd760b8618c"),
                            BankName = "HSBC",
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(9017), new TimeSpan(0, 1, 0, 0, 0)),
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 105, DateTimeKind.Unspecified).AddTicks(9024), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.BankCard", b =>
                {
                    b.Property<Guid>("BankCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CVV")
                        .HasColumnType("int");

                    b.Property<string>("CardHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ExpiryMonth")
                        .HasColumnType("int");

                    b.Property<int>("ExpiryYear")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BankCardId");

                    b.ToTable("BankCards");
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.Currency", b =>
                {
                    b.Property<Guid>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            CurrencyId = new Guid("e5d15d55-5c68-4d90-829b-4ccbe10f337a"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(3952), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "GPB",
                            CurrencyDescription = "British Pound",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(4833), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("b7fbb50c-87e3-4ccb-ab63-9893ee9470af"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5762), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "USD",
                            CurrencyDescription = "United States Doller",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5787), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("a7c1dc99-2be8-4891-807c-e0471602795d"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5797), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "TRY",
                            CurrencyDescription = "Turkish Lira",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5803), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("78301e89-e4e3-4bc3-a36b-c6471370e349"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5812), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "AED",
                            CurrencyDescription = "United Arab Emirates Dirham",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5819), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            CurrencyId = new Guid("31be5f1d-97ec-4d8c-8d35-e7cc98a28fee"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5832), new TimeSpan(0, 1, 0, 0, 0)),
                            CurrencyCode = "EUR",
                            CurrencyDescription = "Euro",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 106, DateTimeKind.Unspecified).AddTicks(5838), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.Merchant", b =>
                {
                    b.Property<Guid>("MerchantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MerchantId");

                    b.ToTable("Merchants");

                    b.HasData(
                        new
                        {
                            MerchantId = new Guid("490c4922-7123-4004-9c80-4adb2d5661e3"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 85, DateTimeKind.Unspecified).AddTicks(5260), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Makes Tech Product",
                            MerchantName = "Apple",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 102, DateTimeKind.Unspecified).AddTicks(3854), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            MerchantId = new Guid("3a517723-3344-4858-9262-2a07927c2ee5"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 102, DateTimeKind.Unspecified).AddTicks(5123), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Online Retaier and Distributer",
                            MerchantName = "Amazon",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 102, DateTimeKind.Unspecified).AddTicks(5151), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            MerchantId = new Guid("bdcdef89-06ff-4d2f-a8e3-2dab99278155"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 102, DateTimeKind.Unspecified).AddTicks(5172), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Groceries Retailer",
                            MerchantName = "Sainsburys",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 102, DateTimeKind.Unspecified).AddTicks(5186), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            MerchantId = new Guid("1f948c80-68f4-4f7e-942f-161b99d28d12"),
                            CreatedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 102, DateTimeKind.Unspecified).AddTicks(5204), new TimeSpan(0, 1, 0, 0, 0)),
                            Description = "Online food delivery service",
                            MerchantName = "Deliveroo",
                            ModifiedTimestamp = new DateTimeOffset(new DateTime(2021, 6, 14, 22, 35, 48, 102, DateTimeKind.Unspecified).AddTicks(5217), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("PaymentGatway.Core.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BankCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MerchantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ModifiedTimestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionId");

                    b.ToTable("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
